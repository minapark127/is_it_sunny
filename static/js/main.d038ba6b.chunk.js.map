{"version":3,"sources":["api.js","key.js","Components/useWeather.js","Components/Header.js","Components/Outline.js","Components/CurrentWeather.js","Components/Error.js","Routes/Current.js","Components/HourlyWeather.js","Routes/Hourly.js","Components/DailyWeather.js","Routes/Daily.js","Components/Router.js","Components/GlobalStyles.js","Components/useDate.js","Components/Landing.js","Routes/Home.js","Components/App.js","index.js"],"names":["Api","lat","long","axios","get","useWeather","useState","loading","setLoading","weather","setWeather","error","setError","geo","setGeo","updateWeather","a","data","useEffect","navigator","geolocation","getCurrentPosition","event","coords","latitude","longitude","err","console","warn","code","message","Ul","styled","ul","Li","li","props","current","SLink","Link","pathname","useLocation","to","Outline","children","Header","Wrapper","div","Current","section","Items","Item","dl","currentWeather","iconID","icon","iconURL","getTime","time","sunrise","Date","toLocaleTimeString","hour12","split","slice","sunset","src","alt","description","Math","floor","temp","feels_like","xmlns","className","viewBox","strokeWidth","fill","strokeLinecap","strokeLinejoin","stroke","d","humidity","cx","cy","r","x1","y1","x2","y2","uvi","Container","Text","span","Object","keys","length","CurrentWeather","Error","Separator","hourly","map","hour","index","Fragment","key","dt","dtTime","id","main","HourlyWeather","daily","day","toLocaleDateString","weekday","max","min","DailyWeather","Router","path","exact","component","Hourly","Daily","GlobalStyles","createGlobalStyle","reset","useDate","apm","setTime","month","date","setDate","getDate","window","toLocaleString","setInterval","BackgroundImg","bg","Info","timezone","weatherId","country","city","Home","Landing","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PASeA,MANf,SAAaC,EAAKC,GAChB,OAAOC,IAAMC,IAAN,8DACkDH,EADlD,gBAC6DC,EAD7D,kBCJY,mCDIZ,mBE0CMG,MA3Cf,WAAuB,IAAD,EACUC,oBAAS,GADnB,mBACbC,EADa,KACJC,EADI,OAEUF,mBAAS,IAFnB,mBAEbG,EAFa,KAEJC,EAFI,OAGMJ,mBAAS,MAHf,mBAGbK,EAHa,KAGNC,EAHM,OAIEN,mBAAS,CAAEL,IAAK,GAAIC,KAAM,KAJ5B,mBAIbW,EAJa,KAIRC,EAJQ,KAoBdC,EAAa,uCAAG,8BAAAC,EAAA,yDACJ,KAAZH,EAAIZ,KAA2B,KAAbY,EAAIX,KADN,0CAGOF,EAAIa,EAAIZ,IAAKY,EAAIX,MAHxB,gBAGRe,EAHQ,EAGRA,KACRP,EAAWO,GAJK,gDAMhBL,EAAS,EAAD,IANQ,yBAQhBJ,GAAW,GARK,4EAAH,qDAoBnB,OAPAU,qBAAU,WAhBRC,UAAUC,YAAYC,oBAVN,SAACC,GAAW,IAAD,EAGrBA,EADFC,OAAoBtB,EAFG,EAEbuB,SAA0BtB,EAFb,EAEEuB,UAE3BX,EAAO,CAAEb,MAAKC,YAGA,SAACwB,GACfC,QAAQC,KAAR,gBAAsBF,EAAIG,KAA1B,cAAoCH,EAAII,eAoBzC,IACHZ,qBAAU,WACRH,MACC,CAACF,IAEG,CAAEN,UAASE,UAASE,U,ykCCvC7B,IAAMoB,EAAKC,IAAOC,GAAV,KAsBFC,EAAKF,IAAOG,GAAV,KAEc,SAACC,GAAD,OAClBA,EAAMC,QAAN,qDAkBEC,EAAQN,YAAOO,IAAPP,CAAH,KAQI,aAAO,IACZQ,EAAaC,cAAbD,SACR,OACE,kBAACT,EAAD,KACE,kBAACG,EAAD,CAAIG,QAAsB,MAAbG,GACX,kBAACF,EAAD,CAAOI,GAAG,KAAV,YAEF,kBAACR,EAAD,CAAIG,QAAsB,YAAbG,GACX,kBAACF,EAAD,CAAOI,GAAG,WAAV,WAEF,kBAACR,EAAD,CAAIG,QAAsB,WAAbG,GACX,kBAACF,EAAD,CAAOI,GAAG,UAAV,YCxDOC,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACd,oCACE,kBAACC,EAAD,MACA,6BAAMD,K,46ECHV,IAAME,EAAUd,IAAOe,IAAV,KAmBPC,EAAUhB,IAAOiB,QAAV,KAiDPC,EAAQlB,IAAOe,IAAV,KAWLI,EAAOnB,IAAOoB,GAAV,KAkCK,cAAyB,IAAtBC,EAAqB,EAArBA,eACVC,EAASD,EAAe5C,QAAQ,GAAG8C,KACnCC,EAAO,2CAAuCF,EAAvC,WACPG,EAAU,SAACC,GACf,OAAQA,GACN,IAAK,UACH,IACMC,EADc,IAAIC,KAA8B,IAAzBP,EAAeM,SAChBE,mBAAmB,GAAI,CACjDC,QAAQ,IAEV,MAAM,GAAN,OAC4B,MAA1BH,EAAQI,MAAM,KAAK,GAAa,KAAOJ,EAAQI,MAAM,KAAK,GAD5D,YAEIJ,EAAQI,MAAM,KAAK,GAFvB,YAE6BJ,EAAQK,OAAO,IAE9C,IAAK,SACH,IACMC,EADa,IAAIL,KAA6B,IAAxBP,EAAeY,QACjBJ,mBAAmB,GAAI,CAC/CC,QAAQ,IAEV,MAAM,GAAN,OAAmC,MAAzBG,EAAOF,MAAM,KAAK,GAAa,KAAOE,EAAOF,MAAM,KAAK,GAAlE,YACEE,EAAOF,MAAM,KAAK,GADpB,YAEIE,EAAOD,OAAO,MAOxB,OACE,kBAAClB,EAAD,KACGO,GACC,oCACE,kBAACL,EAAD,KACE,4BACE,4BACE,yBAAKkB,IAAKV,EAASW,IAAI,0BAEzB,4BAAKd,EAAe5C,QAAQ,GAAG2D,cAEjC,4BACE,6BACE,uCACA,4BAAKC,KAAKC,MAAMjB,EAAekB,MAA/B,UAEF,6BACE,0CACA,4BAAKF,KAAKC,MAAMjB,EAAemB,YAA/B,YAIN,kBAACtB,EAAD,KACE,kBAACC,EAAD,KACE,yBACEsB,MAAM,6BACNC,UAAU,uCACVC,QAAQ,YACRC,YAAY,IACZC,KAAK,OACLC,cAAc,QACdC,eAAe,SAEf,0BAAMC,OAAO,OAAOC,EAAE,kBACtB,0BAAMA,EAAE,oCAEV,wCACA,wCACA,4BAAKZ,KAAKC,MAAMjB,EAAe6B,UAA/B,MAEF,kBAAC/B,EAAD,KACE,yBACEsB,MAAM,6BACNC,UAAU,6CACVC,QAAQ,YACRC,YAAY,IACZC,KAAK,OACLC,cAAc,QACdC,eAAe,SAEf,0BAAMC,OAAO,OAAOC,EAAE,kBACtB,4BAAQE,GAAG,KAAKC,GAAG,KAAKC,EAAE,MAC1B,0BAAMC,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,MAChC,0BAAMH,GAAG,KAAKC,GAAG,IAAIC,GAAG,OAAOC,GAAG,QAClC,0BAAMH,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,OACjC,0BAAMH,GAAG,KAAKC,GAAG,KAAKC,GAAG,OAAOC,GAAG,SACnC,0BAAMH,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,OACjC,0BAAMH,GAAG,IAAIC,GAAG,KAAKC,GAAG,MAAMC,GAAG,SACjC,0BAAMH,GAAG,IAAIC,GAAG,KAAKC,GAAG,IAAIC,GAAG,OAC/B,0BAAMH,GAAG,IAAIC,GAAG,IAAIC,GAAG,MAAMC,GAAG,SAElC,wCACA,wCACA,4BACGpC,EAAeqC,IAAMrB,KAAKC,MAAMjB,EAAeqC,KAAO,MAG3D,kBAACvC,EAAD,KACE,yBACEsB,MAAM,6BACNC,UAAU,sCACVC,QAAQ,YACRC,YAAY,IACZC,KAAK,OACLC,cAAc,QACdC,eAAe,SAEf,0BAAMC,OAAO,OAAOC,EAAE,kBACtB,0BAAMA,EAAE,kEACR,0BAAMK,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,OAChC,0BAAMR,EAAE,4BAEV,uCACA,wCACA,4BAAKxB,EAAQ,aAEf,kBAACN,EAAD,KACE,yBACEsB,MAAM,6BACNC,UAAU,wCACVC,QAAQ,YACRC,YAAY,IACZC,KAAK,OACLC,cAAc,QACdC,eAAe,SAEf,0BAAMC,OAAO,OAAOC,EAAE,kBACtB,0BAAMA,EAAE,kEACR,0BAAMK,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,OAChC,0BAAMR,EAAE,2BAEV,sCACA,wCACA,4BAAKxB,EAAQ,gB,gOCpP3B,IAAMkC,EAAY3D,IAAOe,IAAV,KAMT6C,EAAO5D,IAAO6D,KAAV,KAIK,oBACb,kBAACF,EAAD,KACE,kBAACC,EAAD,gBCKW5C,MAdf,WAAoB,IAAD,EACmB3C,IAA5BE,EADS,EACTA,QAASE,EADA,EACAA,QAASE,EADT,EACSA,MAC1B,OACE,oCACE,kBAAC,EAAD,MACIJ,GAAWE,GAAWqF,OAAOC,KAAKtF,GAASuF,OAAS,EACpD,kBAACC,EAAD,CAAgB5C,eAAgB5C,EAAQ4B,UACtC,KACH1B,GAAS,kBAACuF,EAAD,S,0iCCXlB,IAAMpD,EAAUd,IAAOe,IAAV,KAUPG,EAAQlB,IAAOiB,QAAV,KASLE,EAAOnB,IAAOoB,GAAV,KA2BJ+C,EAAYnE,IAAOe,IAAV,KAMA,cAAiB,IAAdqD,EAAa,EAAbA,OAWhB,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACGA,GACC,oCACGA,EAAOpC,MAAM,EAAG,IAAIqC,KAAI,SAACC,EAAMC,GAAP,OACvB,kBAAC,IAAMC,SAAP,CAAgBC,IAAKF,GACnB,kBAAC,EAAD,KACE,4BAjBA,SAACG,GACf,IACMC,EADS,IAAI/C,KAAU,IAAL8C,GACF7C,mBAAmB,GAAI,CAC3CC,QAAQ,IAEV,MAAM,GAAN,OAC2B,MAAzB6C,EAAO5C,MAAM,KAAK,GAAa,KAAO4C,EAAO5C,MAAM,KAAK,GAD1D,YAEI4C,EAAO3C,OAAO,IAUCP,CAAQ6C,EAAKI,KAClB,4BACE,yBACExC,KArBH0C,EAqBgBN,EAAK7F,QAAQ,GAAG8C,KArBjC,2CAA4CqD,EAA5C,YAsBIzC,IAAI,kBAGR,4BAAKmC,EAAK7F,QAAQ,GAAGoG,MACrB,4BAAKxC,KAAKC,MAAMgC,EAAK/B,MAArB,UAEDgC,EAAQ,GAAK,kBAACJ,EAAD,MAAgB,MA5B5B,IAACS,SCpCJ5D,MAdf,WAAoB,IAAD,EACmB3C,IAA5BE,EADS,EACTA,QAASE,EADA,EACAA,QAASE,EADT,EACSA,MAC1B,OACE,oCACE,kBAAC,EAAD,MACIJ,GAAWE,GAAWqF,OAAOC,KAAKtF,GAASuF,OAAS,EACpD,kBAACc,EAAD,CAAeV,OAAQ3F,EAAQ2F,SAC7B,KACHzF,GAAS,kBAACuF,EAAD,S,ilCCXlB,IAAMpD,GAAUd,IAAOe,IAAV,MAWPG,GAAQlB,IAAOiB,QAAV,MASLE,GAAOnB,IAAOoB,GAAV,KA0BJ+C,GAAYnE,IAAOe,IAAV,KAMA,eAAgB,IAAbgE,EAAY,EAAZA,MAQhB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACGA,GACC,oCACGA,EAAMV,KAAI,SAACW,EAAKT,GAAN,OACT,kBAAC,IAAMC,SAAP,CAAgBC,IAAKF,GACnB,kBAAC,GAAD,KACE,6BAdAG,EAcYM,EAAIN,GAbjB,IAAI9C,KAAU,IAAL8C,GACLO,mBAAmB,GAAI,CAAEC,QAAS,WAarC,4BACE,yBACEhD,KAlBH0C,EAkBgBI,EAAIvG,QAAQ,GAAG8C,KAlBhC,2CAA4CqD,EAA5C,YAmBIzC,IAAI,kBAGR,4BAAK6C,EAAIvG,QAAQ,GAAGoG,MACpB,4BAAKxC,KAAKC,MAAM0C,EAAIzC,KAAK4C,KAAzB,SACA,4BAAK9C,KAAKC,MAAM0C,EAAIzC,KAAK6C,KAAzB,UAEDb,EAAQ,EAAI,kBAAC,GAAD,MAAgB,MA1B3B,IAACK,EACDF,SCrCH1D,OAdf,WAAoB,IAAD,EACmB3C,IAA5BE,EADS,EACTA,QAASE,EADA,EACAA,QAASE,EADT,EACSA,MAC1B,OACE,oCACE,kBAAC,EAAD,MACIJ,GAAWE,GAAWqF,OAAOC,KAAKtF,GAASuF,OAAS,EACpD,kBAACqB,GAAD,CAAcN,MAAOtG,EAAQsG,QAC3B,KACHpG,GAAS,kBAACuF,EAAD,SCEHoB,GAVA,WACb,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWzE,IACjC,kBAAC,IAAD,CAAOuE,KAAK,UAAUE,UAAWC,IACjC,kBAAC,IAAD,CAAOH,KAAK,SAASE,UAAWE,O,2aCRtC,IAiBeC,GAjBMC,YAAH,KAChBC,MCyBaC,OA3Bf,WAAoB,IAAD,EACOzH,mBAAS,CAAE+B,QAAS,GAAI2F,IAAK,KADpC,mBACVtE,EADU,KACJuE,EADI,OAEO3H,mBAAS,CAAE4G,QAAS,GAAIgB,MAAO,GAAIlB,IAAK,KAF/C,mBAEVmB,EAFU,KAEJC,EAFI,KAIXC,EAAU,WACd,IAAMF,EAAO,IAAIG,OAAO1E,KAClBF,EAAOyE,EAAKtE,mBAAmB,GAAI,CACvCC,QAAQ,IAGJoD,EAAUiB,EAAKI,eAAe,GAAI,CAAErB,QAAS,SAC7CgB,EAAQC,EAAKI,eAAe,GAAI,CAAEL,MAAO,SACzClB,EAAMmB,EAAKI,eAAe,GAAI,CAAEvB,IAAK,YAE3CiB,EAAQ,CACN5F,QAAQ,GAAD,OAA4B,MAAvBqB,EAAKK,MAAM,KAAK,GAAa,KAAOL,EAAKK,MAAM,KAAK,GAAzD,YACLL,EAAKK,MAAM,KAAK,IAElBiE,IAAKtE,EAAKM,OAAO,KAEnBoE,EAAQ,CAAElB,UAASgB,QAAOlB,SAK5B,OAHA9F,qBAAU,WACRsH,YAAYH,EAAS,OACpB,IACI,CAAE3E,OAAMyE,S,6/CCvBjB,IAQMrF,GAAUd,IAAOe,IAAV,MASP0F,GAAgBzG,IAAOe,IAAV,MAMO,SAACX,GAAD,MACT,iBAAbA,EAAMsG,GAxBQ,8GA0BG,YAAbtG,EAAMsG,GAzBD,4GA2BQ,SAAbtG,EAAMsG,GA1BJ,4GA4BW,SAAbtG,EAAMsG,GA3BJ,iHA6BW,UAAbtG,EAAMsG,GA3BH,8GA6BU,WAAbtG,EAAMsG,GA5BF,2GAFF,qHAyCJ/C,GAAY3D,IAAOe,IAAV,MAYT4F,GAAO3G,IAAOiB,QAAV,MAeJD,GAAUhB,IAAOiB,QAAV,MAsBE,eAAoC,IAAjC2F,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,UAAWtE,EAAW,EAAXA,KAAW,EACzBwD,KAAfrE,EADwC,EACxCA,KAAMyE,EADkC,EAClCA,KACRW,EAAUF,EAAS7E,MAAM,KAAK,GAC9BgF,EAAOH,EAAS7E,MAAM,KAAK,GAEjC,OACE,kBAAC,GAAD,KACG6E,GAAYlF,GAAQyE,GAAQU,GAAatE,GACxC,oCACE,kBAACkE,GAAD,CAAeC,GAAIG,IACnB,kBAAC,GAAD,KACE,kBAACF,GAAD,KACE,4BACE,4BACGjF,EAAKrB,QADR,IACkBqB,EAAKsE,KAEvB,4BACGG,EAAKjB,QADR,KACmBiB,EAAKnB,IADxB,IAC8BmB,EAAKD,SAIvC,kBAACS,GAAD,KACE,4BACE,4BAAKI,GACL,4BAAKD,KAGT,kBAAC,GAAD,KACE,4BACE,4BAAKD,EAAL,KACA,4BAAKxE,KAAKC,MAAMC,GAAhB,eC3GDyE,OAhBf,WAAiB,IAAD,EACsB3I,IAA5BE,EADM,EACNA,QAASE,EADH,EACGA,QAASE,EADZ,EACYA,MAC1B,OACE,qCACIJ,GAAWE,GAAWqF,OAAOC,KAAKtF,GAASuF,OAAS,EACpD,kBAACiD,GAAD,CACEL,SAAUnI,EAAQmI,SAClBC,UAAWpI,EAAQ4B,QAAQ5B,QAAQ,GAAGoG,KACtCtC,KAAM9D,EAAQ4B,QAAQkC,OAEtB,KACH5D,GAAS,kBAACuF,EAAD,QCSDgD,OAlBf,WAAgB,IAAD,EACuB7I,IAA5BE,EADK,EACLA,QAASE,EADJ,EACIA,QAASE,EADb,EACaA,MAC1B,OACE,yBAAK+D,UAAU,OACb,qCACInE,GAAWE,GAAWqF,OAAOC,KAAKtF,GAASuF,OAAS,EACpD,oCACE,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,OAEA,KACHrF,GAAS,kBAACuF,EAAD,SCflBiD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.d038ba6b.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { APPID } from \"./key\";\n\nfunction Api(lat, long) {\n  return axios.get(\n    `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${long}&appid=${APPID}&units=metric`\n  );\n}\n\nexport default Api;\n","export const APPID = \"ba23a2a574ff9f7cb78d86b581b05ca4\";\n","import { useState, useEffect } from \"react\";\nimport Api from \"../api\";\n\nfunction useWeather() {\n  const [loading, setLoading] = useState(true);\n  const [weather, setWeather] = useState({});\n  const [error, setError] = useState(null);\n  const [geo, setGeo] = useState({ lat: \"\", long: \"\" });\n\n  const getLocation = () => {\n    const success = (event) => {\n      const {\n        coords: { latitude: lat, longitude: long },\n      } = event;\n      setGeo({ lat, long });\n    };\n\n    const onError = (err) => {\n      console.warn(`ERROR(${err.code}): ${err.message}`);\n    };\n    navigator.geolocation.getCurrentPosition(success, onError);\n  };\n\n  const updateWeather = async () => {\n    if (geo.lat !== \"\" && geo.long !== \"\") {\n      try {\n        const { data } = await Api(geo.lat, geo.long);\n        setWeather(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    getLocation();\n  }, []);\n  useEffect(() => {\n    updateWeather();\n  }, [geo]);\n\n  return { loading, weather, error };\n}\n\nexport default useWeather;\n","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Ul = styled.ul`\n  position: absolute;\n  top: calc(65vh - 50px);\n  @media (max-width: 425px) {\n    top: calc(50vh - 50px);\n  }\n  height: 50px;\n  z-index: 1;\n  font-size: 25px;\n  display: flex;\n  align-items: flex-end;\n  color: #dfe6e9;\n  @media (max-width: 768px) {\n    width: 100%;\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n  }\n  @media (max-width: 425px) {\n    font-size: 18px;\n  }\n`;\n\nconst Li = styled.li`\n  display: flex;\n  background-color: ${(props) =>\n    props.current ? `rgba(45, 52, 54, 0.85)` : `rgba(45, 52, 54, 0.55)`};\n  height: 100%;\n  transition: background 0.3s linear;\n\n  :hover {\n    cursor: pointer;\n    background: rgba(45, 52, 54, 0.85);\n  }\n\n  :not(:last-child) {\n    border-right: 1.5px solid rgba(45, 52, 54, 0.85);\n  }\n  @media (max-width: 768px) {\n    width: 100%;\n    align-items: center;\n    text-align: center;\n  }\n`;\nconst SLink = styled(Link)`\n  width: 100%;\n  padding: 10px 50px;\n  @media (max-width: 768px) {\n    padding: 0;\n  }\n`;\n\nexport default () => {\n  const { pathname } = useLocation();\n  return (\n    <Ul>\n      <Li current={pathname === \"/\"}>\n        <SLink to=\"/\">Current</SLink>\n      </Li>\n      <Li current={pathname === \"/hourly\"}>\n        <SLink to=\"/hourly\">Hourly</SLink>\n      </Li>\n      <Li current={pathname === \"/daily\"}>\n        <SLink to=\"/daily\">Daily</SLink>\n      </Li>\n    </Ul>\n  );\n};\n","import React from \"react\";\nimport Header from \"./Header\";\n\nconst Outline = ({ children }) => (\n  <>\n    <Header />\n    <div>{children}</div>\n  </>\n);\n\nexport default Outline;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  background-color: rgb(45, 52, 54);\n  color: #dfe6e9;\n  width: 100%;\n  height: 35vh;\n  padding: 30px;\n  display: grid;\n  grid-template-columns: 0.8fr 1.5fr;\n  @media (max-width: 768px) {\n    grid-auto-flow: column;\n    grid-template-rows: 1fr 3fr;\n    grid-template-columns: 1fr;\n    row-gap: 50px;\n    overflow: scroll;\n  }\n  @media (max-width: 425px) {\n    height: 50vh;\n  }\n`;\nconst Current = styled.section`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  column-gap: 10px;\n  dl:first-of-type {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    dt {\n      text-transform: capitalize;\n      font-size: 22px;\n      @media (max-width: 425px) {\n        font-size: 16px;\n      }\n    }\n    dd {\n      width: 60%;\n      img {\n        width: 100%;\n      }\n    }\n  }\n  dl:nth-of-type(2) {\n    height: 100%;\n    display: grid;\n    grid-template-rows: repeat(2, 1fr);\n    align-items: center;\n    div {\n      line-height: 2;\n      dt {\n        width: 80%;\n        font-size: 14px;\n        text-transform: uppercase;\n        opacity: 0.8;\n        margin-bottom: 10px;\n        border-bottom: 1px solid rgba(223, 230, 233, 0.8);\n      }\n      dd {\n        font-size: 30px;\n        @media (max-width: 768px) {\n          font-size: 22px;\n        }\n      }\n    }\n  }\n`;\n\nconst Items = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  @media (max-width: 768px) {\n    margin-bottom: 50px;\n    grid-template-columns: repeat(2, 1fr);\n    grid-template-rows: repeat(2, 1fr);\n    row-gap: 30px;\n  }\n`;\n\nconst Item = styled.dl`\n  display: grid;\n  grid-template-rows: 2.5fr repeat(3, 1fr);\n  align-items: center;\n  justify-items: center;\n  @media (max-width: 768px) {\n    height: 100%;\n  }\n  svg {\n    stroke: #dfe6e9;\n    width: 40%;\n    height: 40%;\n    align-self: end;\n    @media (max-width: 768px) {\n      width: 100%;\n      height: 100%;\n    }\n  }\n  dt {\n    font-size: 16px;\n    @media (max-width: 425px) {\n      font-size: 14px;\n    }\n    text-transform: uppercase;\n    opacity: 0.8;\n  }\n  dd {\n    font-size: 25px;\n    @media (max-width: 768px) {\n      font-size: 18px;\n    }\n  }\n`;\n\nexport default ({ currentWeather }) => {\n  const iconID = currentWeather.weather[0].icon;\n  const iconURL = `http://openweathermap.org/img/wn/${iconID}@2x.png`;\n  const getTime = (time) => {\n    switch (time) {\n      case \"sunrise\":\n        const sunriseTime = new Date(currentWeather.sunrise * 1000);\n        const sunrise = sunriseTime.toLocaleTimeString([], {\n          hour12: true,\n        });\n        return `${\n          sunrise.split(\":\")[0] === \"0\" ? \"12\" : sunrise.split(\":\")[0]\n        }:${sunrise.split(\":\")[1]} ${sunrise.slice(-2)}`;\n        break;\n      case \"sunset\":\n        const sunsetTime = new Date(currentWeather.sunset * 1000);\n        const sunset = sunsetTime.toLocaleTimeString([], {\n          hour12: true,\n        });\n        return `${sunset.split(\":\")[0] === \"0\" ? \"12\" : sunset.split(\":\")[0]}:${\n          sunset.split(\":\")[1]\n        } ${sunset.slice(-2)}`;\n        break;\n\n      default:\n        break;\n    }\n  };\n  return (\n    <Wrapper>\n      {currentWeather && (\n        <>\n          <Current>\n            <dl>\n              <dd>\n                <img src={iconURL} alt=\"current weather icon\" />\n              </dd>\n              <dt>{currentWeather.weather[0].description}</dt>\n            </dl>\n            <dl>\n              <div>\n                <dt>Current</dt>\n                <dd>{Math.floor(currentWeather.temp)}°c</dd>\n              </div>\n              <div>\n                <dt>Feels like</dt>\n                <dd>{Math.floor(currentWeather.feels_like)}°c</dd>\n              </div>\n            </dl>\n          </Current>\n          <Items>\n            <Item>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"icon icon-tabler icon-tabler-droplet\"\n                viewBox=\"0 0 24 24\"\n                strokeWidth=\"1\"\n                fill=\"none\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              >\n                <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\n                <path d=\"M12 3l5 5a7 7 0 1 1 -10 0l5 -5\" />\n              </svg>\n              <dt>Humidity</dt>\n              <span>―</span>\n              <dd>{Math.floor(currentWeather.humidity)}%</dd>\n            </Item>\n            <Item>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"icon icon-tabler icon-tabler-brightness-up\"\n                viewBox=\"0 0 24 24\"\n                strokeWidth=\"1\"\n                fill=\"none\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              >\n                <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\n                <circle cx=\"12\" cy=\"12\" r=\"3\" />\n                <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"3\" />\n                <line x1=\"17\" y1=\"7\" x2=\"18.4\" y2=\"5.6\" />\n                <line x1=\"19\" y1=\"12\" x2=\"21\" y2=\"12\" />\n                <line x1=\"17\" y1=\"17\" x2=\"18.4\" y2=\"18.4\" />\n                <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"21\" />\n                <line x1=\"7\" y1=\"17\" x2=\"5.6\" y2=\"18.4\" />\n                <line x1=\"6\" y1=\"12\" x2=\"4\" y2=\"12\" />\n                <line x1=\"7\" y1=\"7\" x2=\"5.6\" y2=\"5.6\" />\n              </svg>\n              <dt>UV Index</dt>\n              <span>―</span>\n              <dd>\n                {currentWeather.uvi ? Math.floor(currentWeather.uvi) : \"-\"}\n              </dd>\n            </Item>\n            <Item>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"icon icon-tabler icon-tabler-sunset\"\n                viewBox=\"0 0 24 24\"\n                strokeWidth=\"1\"\n                fill=\"none\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              >\n                <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\n                <path d=\"M3 17h1m16 0h1M5.6 10.6l.7.7m12.1-.7l-.7.7M8 17a4 4 0 0 1 8 0\" />\n                <line x1=\"3\" y1=\"21\" x2=\"21\" y2=\"21\" />\n                <path d=\"M12 9v-6l3 3m-6 0l3 -3\" />\n              </svg>\n              <dt>Sunrise</dt>\n              <span>―</span>\n              <dd>{getTime(\"sunrise\")}</dd>\n            </Item>\n            <Item>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"icon icon-tabler icon-tabler-sunshine\"\n                viewBox=\"0 0 24 24\"\n                strokeWidth=\"1\"\n                fill=\"none\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              >\n                <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\n                <path d=\"M3 17h1m16 0h1M5.6 10.6l.7.7m12.1-.7l-.7.7M8 17a4 4 0 0 1 8 0\" />\n                <line x1=\"3\" y1=\"21\" x2=\"21\" y2=\"21\" />\n                <path d=\"M12 3v6l3 -3m-6 0l3 3\" />\n              </svg>\n              <dt>Sunset</dt>\n              <span>―</span>\n              <dd>{getTime(\"sunset\")}</dd>\n            </Item>\n          </Items>\n        </>\n      )}\n    </Wrapper>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: #dfe6e9;\n`;\n\nexport default () => (\n  <Container>\n    <Text>ERROR</Text>\n  </Container>\n);\n","import React from \"react\";\nimport useWeather from \"../Components/useWeather\";\nimport Outline from \"../Components/Outline\";\nimport CurrentWeather from \"../Components/CurrentWeather\";\nimport Error from \"../Components/Error\";\n\nfunction Current() {\n  const { loading, weather, error } = useWeather();\n  return (\n    <>\n      <Outline>\n        {!loading && weather && Object.keys(weather).length > 0 ? (\n          <CurrentWeather currentWeather={weather.current} />\n        ) : null}\n        {error && <Error />}\n      </Outline>\n    </>\n  );\n}\n\nexport default Current;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  background-color: rgb(45, 52, 54);\n  color: #dfe6e9;\n  height: 35vh;\n  overflow: scroll;\n  @media (max-width: 425px) {\n    height: 50vh;\n  }\n`;\n\nconst Items = styled.section`\n  display: grid;\n  grid-auto-flow: column;\n  grid-auto-rows: 1fr;\n  height: 100%;\n  width: 100%;\n  align-items: center;\n`;\n\nconst Item = styled.dl`\n  width: 180px;\n  height: 100%;\n  padding: 0 15px;\n  display: grid;\n  grid-template-rows: 1fr 2fr repeat(2, 1fr);\n  align-items: center;\n  justify-items: center;\n  font-size: 18px;\n  & > * {\n    width: 100%;\n    text-align: center;\n  }\n  dt {\n    align-self: end;\n  }\n  dd:nth-of-type(3) {\n    align-self: start;\n  }\n  @media (max-width: 425px) {\n    height: 80%;\n    img {\n      width: 100%;\n    }\n  }\n`;\n\nconst Separator = styled.div`\n  width: 1px;\n  height: 60%;\n  background-color: rgba(223, 230, 233, 0.45);\n`;\n\nexport default ({ hourly }) => {\n  const iconURL = (id) => `http://openweathermap.org/img/wn/${id}@2x.png`;\n  const getTime = (dt) => {\n    const dtDate = new Date(dt * 1000);\n    const dtTime = dtDate.toLocaleTimeString([], {\n      hour12: true,\n    });\n    return `${\n      dtTime.split(\":\")[0] === \"0\" ? \"12\" : dtTime.split(\":\")[0]\n    } ${dtTime.slice(-2)}`;\n  };\n  return (\n    <Wrapper>\n      <Items>\n        {hourly && (\n          <>\n            {hourly.slice(1, 25).map((hour, index) => (\n              <React.Fragment key={index}>\n                <Item>\n                  <dt>{getTime(hour.dt)}</dt>\n                  <dd>\n                    <img\n                      src={iconURL(hour.weather[0].icon)}\n                      alt=\"weather icon\"\n                    />\n                  </dd>\n                  <dd>{hour.weather[0].main}</dd>\n                  <dd>{Math.floor(hour.temp)}°c</dd>\n                </Item>\n                {index < 23 ? <Separator /> : null}\n              </React.Fragment>\n            ))}\n          </>\n        )}\n      </Items>\n    </Wrapper>\n  );\n};\n","import React from \"react\";\nimport useWeather from \"../Components/useWeather\";\nimport Outline from \"../Components/Outline\";\nimport HourlyWeather from \"../Components/HourlyWeather\";\nimport Error from \"../Components/Error\";\n\nfunction Current() {\n  const { loading, weather, error } = useWeather();\n  return (\n    <>\n      <Outline>\n        {!loading && weather && Object.keys(weather).length > 0 ? (\n          <HourlyWeather hourly={weather.hourly} />\n        ) : null}\n        {error && <Error />}\n      </Outline>\n    </>\n  );\n}\n\nexport default Current;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  background-color: rgb(45, 52, 54);\n  color: #dfe6e9;\n  height: 35vh;\n  padding: 30px 50px;\n  @media (max-width: 425px) {\n    height: 50vh;\n    padding: 30px 20px;\n  }\n`;\n\nconst Items = styled.section`\n  display: grid;\n  grid-auto-column: 50px;\n  width: 100%;\n  height: 100%;\n  overflow: scroll;\n  justify-items: center;\n`;\n\nconst Item = styled.dl`\n  width: 95%;\n  height: 100%;\n  display: grid;\n  grid-template-columns: repeat(2, 1fr) repeat(3, 0.5fr);\n  font-size: 18px;\n  align-items: center;\n  dt {\n    font-size: 20px;\n    @media (max-width: 425px) {\n      font-size: 16px;\n    }\n  }\n  dd {\n    text-align: center;\n  }\n  img {\n    height: 50px;\n  }\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n  @media (max-width: 425px) {\n    font-size: 14px;\n  }\n`;\nconst Separator = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: rgba(223, 230, 233, 0.45);\n`;\n\nexport default ({ daily }) => {\n  const iconURL = (id) => `http://openweathermap.org/img/wn/${id}@2x.png`;\n  const getDay = (dt) => {\n    const date = new Date(dt * 1000);\n    const day = date.toLocaleDateString([], { weekday: \"long\" });\n    return day;\n  };\n\n  return (\n    <Wrapper>\n      <Items>\n        {daily && (\n          <>\n            {daily.map((day, index) => (\n              <React.Fragment key={index}>\n                <Item>\n                  <dt>{getDay(day.dt)}</dt>\n                  <dd>\n                    <img\n                      src={iconURL(day.weather[0].icon)}\n                      alt=\"weather icon\"\n                    />\n                  </dd>\n                  <dd>{day.weather[0].main}</dd>\n                  <dd>{Math.floor(day.temp.max)}°c</dd>\n                  <dd>{Math.floor(day.temp.min)}°c</dd>\n                </Item>\n                {index < 7 ? <Separator /> : null}\n              </React.Fragment>\n            ))}\n          </>\n        )}\n      </Items>\n    </Wrapper>\n  );\n};\n","import React from \"react\";\nimport useWeather from \"../Components/useWeather\";\nimport Outline from \"../Components/Outline\";\nimport DailyWeather from \"../Components/DailyWeather\";\nimport Error from \"../Components/Error\";\n\nfunction Current() {\n  const { loading, weather, error } = useWeather();\n  return (\n    <>\n      <Outline>\n        {!loading && weather && Object.keys(weather).length > 0 ? (\n          <DailyWeather daily={weather.daily} />\n        ) : null}\n        {error && <Error />}\n      </Outline>\n    </>\n  );\n}\n\nexport default Current;\n","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Current from \"../Routes/Current\";\nimport Hourly from \"../Routes/Hourly\";\nimport Daily from \"../Routes/Daily\";\n\nconst Router = () => {\n  return (\n    <HashRouter>\n      <Route path=\"/\" exact component={Current} />\n      <Route path=\"/hourly\" component={Hourly} />\n      <Route path=\"/daily\" component={Daily} />\n    </HashRouter>\n  );\n};\n\nexport default Router;\n","import { createGlobalStyle } from \"styled-components\";\nimport { reset } from \"styled-reset\";\n\nconst GlobalStyles = createGlobalStyle`\n${reset}\na{\n    text-decoration: none;\n    color: inherit;\n  }\n  *{\n    box-sizing: border-box;\n  }\n  body{\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size: 16px;\n    font-weight: 300;\n    background-color: rgb(45, 52, 54);\n  }\n`;\n\nexport default GlobalStyles;\n","import { useState, useEffect } from \"react\";\n\nfunction useDate() {\n  const [time, setTime] = useState({ current: \"\", apm: \"\" });\n  const [date, setDate] = useState({ weekday: \"\", month: \"\", day: \"\" });\n\n  const getDate = () => {\n    const date = new window.Date();\n    const time = date.toLocaleTimeString([], {\n      hour12: true,\n    });\n\n    const weekday = date.toLocaleString([], { weekday: \"long\" });\n    const month = date.toLocaleString([], { month: \"long\" });\n    const day = date.toLocaleString([], { day: \"numeric\" });\n\n    setTime({\n      current: `${time.split(\":\")[0] === \"0\" ? \"12\" : time.split(\":\")[0]}:${\n        time.split(\":\")[1]\n      }`,\n      apm: time.slice(-2),\n    });\n    setDate({ weekday, month, day });\n  };\n  useEffect(() => {\n    setInterval(getDate, 1000);\n  }, []);\n  return { time, date };\n}\nexport default useDate;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport useDate from \"./useDate\";\n\nconst Thunderstorm = `https://images.pexels.com/photos/3637060/pexels-photo-3637060.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=500`;\nconst Drizzle = `https://images.pexels.com/photos/913807/pexels-photo-913807.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=500`;\nconst Rain = `https://images.pexels.com/photos/459451/pexels-photo-459451.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=500`;\nconst Snow = `https://images.pexels.com/photos/4620/snow-landscape-trees-winter.jpg?auto=compress&cs=tinysrgb&fit=crop&h=500`;\nconst Mist = `https://images.pexels.com/photos/4086307/pexels-photo-4086307.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260`;\nconst Clear = `https://images.pexels.com/photos/1627835/pexels-photo-1627835.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=500`;\nconst Clouds = `https://images.pexels.com/photos/928/sky-clouds-cloudy-blue.jpg?auto=compress&cs=tinysrgb&fit=crop&h=500`;\n\nconst Wrapper = styled.div`\n  height: 65vh;\n  width: 100vw;\n  background-color: white;\n  @media (max-width: 425px) {\n    height: 50vh;\n  }\n`;\n\nconst BackgroundImg = styled.div`\n  height: 65vh;\n  width: 100vw;\n  position: absolute;\n  top: 0%;\n  left: 0%;\n  background-image: url(${(props) =>\n    props.bg === \"Thunderstorm\"\n      ? Thunderstorm\n      : props.bg === \"Drizzle\"\n      ? Drizzle\n      : props.bg === \"Rain\"\n      ? Rain\n      : props.bg === \"Snow\"\n      ? Snow\n      : props.bg === \"Clear\"\n      ? Clear\n      : props.bg === \"Clouds\"\n      ? Clouds\n      : Mist});\n  background-position: center;\n  background-size: cover;\n  opacity: 0.5;\n  @media (max-width: 425px) {\n    height: 50vh;\n  }\n`;\n\nconst Container = styled.div`\n  z-index: 1;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  padding: 50px 30px;\n  display: flex;\n  justify-content: space-between;\n  section:nth-of-type(2) {\n    text-align: right;\n  }\n`;\nconst Info = styled.section`\n  li:nth-of-type(1) {\n    margin-bottom: 10px;\n    font-size: 40px;\n    @media (max-width: 425px) {\n      font-size: 30px;\n    }\n  }\n  li:nth-of-type(2) {\n    font-size: 25px;\n    @media (max-width: 425px) {\n      font-size: 18px;\n    }\n  }\n`;\nconst Current = styled.section`\n  position: absolute;\n  bottom: 90px;\n  font-size: 30px;\n  @media (max-width: 425px) {\n    font-size: 22px;\n  }\n  ul {\n    display: flex;\n    align-items: baseline;\n    li {\n      margin-right: 10px;\n    }\n    li:nth-of-type(1) {\n      font-size: 35px;\n      @media (max-width: 425px) {\n        font-size: 26px;\n      }\n    }\n  }\n`;\n\nexport default ({ timezone, weatherId, temp }) => {\n  const { time, date } = useDate();\n  const country = timezone.split(\"/\")[0];\n  const city = timezone.split(\"/\")[1];\n\n  return (\n    <Wrapper>\n      {timezone && time && date && weatherId && temp && (\n        <>\n          <BackgroundImg bg={weatherId} />\n          <Container>\n            <Info>\n              <ul>\n                <li>\n                  {time.current} {time.apm}\n                </li>\n                <li>\n                  {date.weekday}, {date.day} {date.month}\n                </li>\n              </ul>\n            </Info>\n            <Info>\n              <ul>\n                <li>{city}</li>\n                <li>{country}</li>\n              </ul>\n            </Info>\n            <Current>\n              <ul>\n                <li>{weatherId},</li>\n                <li>{Math.floor(temp)}°c</li>\n              </ul>\n            </Current>\n          </Container>\n        </>\n      )}\n    </Wrapper>\n  );\n};\n","import React from \"react\";\nimport useWeather from \"../Components/useWeather\";\nimport Landing from \"../Components/Landing\";\nimport Error from \"../Components/Error\";\n\nfunction Home() {\n  const { loading, weather, error } = useWeather();\n  return (\n    <>\n      {!loading && weather && Object.keys(weather).length > 0 ? (\n        <Landing\n          timezone={weather.timezone}\n          weatherId={weather.current.weather[0].main}\n          temp={weather.current.temp}\n        ></Landing>\n      ) : null}\n      {error && <Error />}\n    </>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport Router from \"./Router\";\nimport GlobalStyles from \"./GlobalStyles\";\nimport Home from \"../Routes/Home\";\nimport useWeather from \"./useWeather\";\nimport Error from \"./Error\";\n\nfunction App() {\n  const { loading, weather, error } = useWeather();\n  return (\n    <div className=\"App\">\n      <>\n        {!loading && weather && Object.keys(weather).length > 0 ? (\n          <>\n            <Home />\n            <Router />\n            <GlobalStyles />\n          </>\n        ) : null}\n        {error && <Error />}\n      </>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}